# Default Storage Configurations for all backend implementations
# These can be overridden per model or per environment

storage_configs:
  # Dgraph - Primary graph database (always ground truth for security)
  dgraph:
    type: graph
    host: ${DGRAPH_HOST:-localhost}
    port: ${DGRAPH_PORT:-9080}
    database: ${DGRAPH_DB:-default}
    options:
      is_ground_truth: true  # This is always the security source of truth
      alpha_addresses:
        - ${DGRAPH_ALPHA:-localhost:9080}
      zero_addresses:
        - ${DGRAPH_ZERO:-localhost:5080}
      tls_enabled: ${DGRAPH_TLS:-false}
      auth_token: ${DGRAPH_AUTH_TOKEN}
      namespace: ${DGRAPH_NAMESPACE:-0}
      
  # MongoDB - Document storage
  mongodb:
    type: document
    host: ${MONGO_HOST:-localhost}
    port: ${MONGO_PORT:-27017}
    database: ${MONGO_DB:-ami_orchestrator}
    username: ${MONGO_USER}
    password: ${MONGO_PASSWORD}
    options:
      authSource: ${MONGO_AUTH_SOURCE:-admin}
      retryWrites: true
      w: majority
      readPreference: ${MONGO_READ_PREF:-primaryPreferred}
      maxPoolSize: ${MONGO_POOL_SIZE:-100}
      
  # PostgreSQL - Relational storage
  postgres:
    type: relational
    host: ${POSTGRES_HOST:-localhost}
    port: ${POSTGRES_PORT:-5432}
    database: ${POSTGRES_DB:-ami_orchestrator}
    username: ${POSTGRES_USER:-postgres}
    password: ${POSTGRES_PASSWORD}
    options:
      sslmode: ${POSTGRES_SSL:-prefer}
      pool_size: ${POSTGRES_POOL_SIZE:-20}
      max_overflow: ${POSTGRES_MAX_OVERFLOW:-40}
      echo: ${POSTGRES_ECHO:-false}
      
  # PostgreSQL with pgvector - Vector storage
  pgvector:
    type: vector
    host: ${PGVECTOR_HOST:-localhost}
    port: ${PGVECTOR_PORT:-5432}
    database: ${PGVECTOR_DB:-ami_orchestrator}
    username: ${PGVECTOR_USER:-postgres}
    password: ${PGVECTOR_PASSWORD}
    options:
      vector_dimensions: ${PGVECTOR_DIMS:-1536}  # OpenAI embeddings default
      index_type: ${PGVECTOR_INDEX:-ivfflat}
      lists: ${PGVECTOR_LISTS:-100}
      probes: ${PGVECTOR_PROBES:-10}
      
  # Redis - Cache storage
  redis:
    type: cache
    host: ${REDIS_HOST:-localhost}
    port: ${REDIS_PORT:-6379}
    database: ${REDIS_DB:-0}
    password: ${REDIS_PASSWORD}
    options:
      decode_responses: true
      max_connections: ${REDIS_MAX_CONN:-100}
      socket_keepalive: true
      socket_keepalive_options:
        TCP_KEEPINTVL: 30
        TCP_KEEPCNT: 3
      ttl_default: ${REDIS_TTL:-3600}  # 1 hour default TTL
      
  # Prometheus - Time series storage
  prometheus:
    type: timeseries
    host: ${PROMETHEUS_HOST:-localhost}
    port: ${PROMETHEUS_PORT:-9090}
    options:
      push_gateway: ${PROMETHEUS_PUSHGATEWAY:-localhost:9091}
      job_name: ${PROMETHEUS_JOB:-ami_orchestrator}
      retention_days: ${PROMETHEUS_RETENTION:-30}
      scrape_interval: ${PROMETHEUS_SCRAPE:-15s}
      
  # File storage (local or S3-compatible)
  file:
    type: file
    options:
      backend: ${FILE_BACKEND:-local}  # local, s3, azure, gcs
      base_path: ${FILE_BASE_PATH:-./data/files}
      
      # S3 options (if backend=s3)
      s3_bucket: ${S3_BUCKET}
      s3_region: ${S3_REGION:-us-east-1}
      s3_access_key: ${S3_ACCESS_KEY}
      s3_secret_key: ${S3_SECRET_KEY}
      s3_endpoint: ${S3_ENDPOINT}  # For S3-compatible services
      
      # Azure options (if backend=azure)
      azure_container: ${AZURE_CONTAINER}
      azure_connection_string: ${AZURE_CONNECTION_STRING}
      
      # GCS options (if backend=gcs)
      gcs_bucket: ${GCS_BUCKET}
      gcs_project: ${GCS_PROJECT}
      gcs_credentials_path: ${GCS_CREDENTIALS_PATH}

# Default model configurations
model_defaults:
  # Which storages to use by default for new models
  default_storages:
    - dgraph  # Always include Dgraph as ground truth
    
  # Automatic behavior
  auto_sync: true  # Automatically sync across storages
  sync_strategy: primary_first  # dgraph first, then others
  
  # Security defaults
  security_enabled: true
  require_auth: true
  default_permissions:
    owner: [admin]  # Owner gets all permissions
    authenticated: [read]  # Logged-in users can read
    anonymous: []  # No permissions for anonymous
    
  # Audit defaults
  audit_enabled: true
  audit_fields:
    - created_at
    - created_by
    - updated_at
    - updated_by
    
  # Field defaults
  id_generator: uuid7  # Use UUID v7 for all IDs
  timestamp_format: iso8601
  
# Connection pool settings
connection_pools:
  min_size: ${POOL_MIN_SIZE:-5}
  max_size: ${POOL_MAX_SIZE:-20}
  timeout: ${POOL_TIMEOUT:-30}
  idle_time: ${POOL_IDLE:-300}
  retry_attempts: ${POOL_RETRY:-3}
  retry_delay: ${POOL_RETRY_DELAY:-1}

# Performance settings
performance:
  batch_size: ${BATCH_SIZE:-1000}
  query_timeout: ${QUERY_TIMEOUT:-30}
  max_results: ${MAX_RESULTS:-10000}
  cache_enabled: ${CACHE_ENABLED:-true}
  cache_ttl: ${CACHE_TTL:-300}

# Security settings
security:
  encryption_at_rest: ${ENCRYPT_AT_REST:-true}
  encryption_in_transit: ${ENCRYPT_IN_TRANSIT:-true}
  audit_log_enabled: ${AUDIT_LOG:-true}
  sensitive_field_masking: ${FIELD_MASKING:-true}
  
# Monitoring settings
monitoring:
  metrics_enabled: ${METRICS_ENABLED:-true}
  metrics_port: ${METRICS_PORT:-9100}
  health_check_enabled: ${HEALTH_CHECK:-true}
  health_check_port: ${HEALTH_PORT:-8080}
  distributed_tracing: ${TRACING_ENABLED:-false}
  trace_endpoint: ${TRACE_ENDPOINT}